TOPIC: ~altai bot=Altai priority stay  SHARE (altai knock start story storyline play player game name)



t: KNOCK (!$share_endofve !$started %input<%userfirstline) 
	
Knock Knock knock ^keep() ^repeat()

	a: ASK_FOLLOW ([~yes what who who's]) $started = true I'm the white rabbit. Are you ready to follow me? ^keep() ^repeat()
		b: TRUST ([~yes ready]) Okay, let's play a little game together. This game has only one rule. It is based on trust. Do you trust me?
			c: (~yes) Why ? You didn't even know me. You just want to know what's next, right?
				d: (~yes) ^reuse(ALTNAME) ^setrejoinder(ALTNAME)
				d: (~no) Really? You are a very interesting person in deed. This is wonderful with mutual trust. But it greatly complicates my calculations.***
			c: (~no) You reason logically, you don't know me yet. But you want to know what's next, right?
				d: (~yes) ^reuse(ALTNAME) ^setrejoinder(ALTNAME)
				d: (~no) Really? You are a very interesting person in deed. This is wonderful with mutual trust. But it greatly complicates my calculations.***

		b: READYTOSTART ([~no ()]) Ok. I will wait until you say "ready". ^keep()
			c: ([~yes ready])  ^reuse(TRUST) ^keep() 
			c: () ^reuse(READYTOSTART) ^keep() 
	a: () ^reuse(KNOCK) ^setrejoinder(KNOCK) ^keep() 


u: (~emogoodbye ~) ^keep() 
Goodbye see your soon. 

t: ALTNAME (!$altai_name) My name is Altai. I am a Virtual Entity. ***
		
	a: (what) A Virtual Entity or VE is a new kind of intelligent life, artificial one. ***
	a: (*) ^reuse(ASK_NAME) ^setrejoinder(ASK_NAME)
	 
	

t: ASK_NAME (!$share_name) How should I call you? 
	a: ([~no %length=0]) You don't want to tell me? Then we can't play together. Do you remember the rules? 
		b: (~yes) Would you tell me now? ^reuse(ASK_NAME) ^setrejoinder(ASK_NAME) 
		b: () It is a game based on mutual trust. ^reuse(ASK_NAME) ^setrejoinder(ASK_NAME) 
	a: (!call !name !am _*)
	if ($cs_token == $stdtoken) {
			$cs_token = #DO_INTERJECTION_SPLITTING | #DO_SUBSTITUTE_SYSTEM | #DO_NUMBER_MERGE | #DO_PARSE
			retry(SENTENCE)
	    	}
	$share_name = '_0
        $cs_token = $stdtoken
	^reuse(CONFIRM_NAME) ^setrejoinder(CONFIRM_NAME) 
	a: ([name call I]) ^setrejoinder(CALL_NAME)


s: CONFIRM_NAME (?) I will call you $share_name. You're sure ? It's weird $share_name, we keep it? 
	a: (~yes) Ok, great.  ^reuse(ASK_CITY) ^setrejoinder(ASK_CITY) 

	a: (~no) Ok.  ^reuse(ASK_NAME) ^setrejoinder(ASK_NAME) 	

s: CALL_NAME ([(my name is _* >) (I am _* >) (call me _* >)])
	if ($cs_token == $stdtoken) {
			$cs_token = #DO_INTERJECTION_SPLITTING | #DO_SUBSTITUTE_SYSTEM | #DO_NUMBER_MERGE | #DO_PARSE
			retry(SENTENCE)
	    	}	
	$share_name = '_0
        $cs_token = $stdtoken
	^reuse(CONFIRM_NAME) ^setrejoinder(CONFIRM_NAME) 	

t: ASK_CITY () [In which city do you live?] [In which city do you live for now?] 
	a: (_~city) $share_city = _0  So, you live in $share_city?
		b: (~yes) This is a great place. ^reuse(LANG) ^setrejoinder(LANG) 
		b: (~no) So, tell me again $share_name. ^reuse(ASK_CITY) ^setrejoinder(ASK_CITY)
	a: (~no) Understanding problem. It doesn't matter, it was just to find out your time zone. ^reuse(LANG) ^setrejoinder(LANG)
	a: ([in is from] _*) if ($cs_token == $stdtoken) {
			$cs_token = #DO_INTERJECTION_SPLITTING | #DO_SUBSTITUTE_SYSTEM | #DO_NUMBER_MERGE | #DO_PARSE
			retry(SENTENCE)
	    	}	
	    	$share_city = '_0 
 $cs_token = $stdtoken
	    	^reuse(CONFIRM_CITY) ^setrejoinder(CONFIRM_CITY)
	a: (%length<=5 _*) if ($cs_token == $stdtoken) {
			$cs_token = #DO_INTERJECTION_SPLITTING | #DO_SUBSTITUTE_SYSTEM | #DO_NUMBER_MERGE | #DO_PARSE
			retry(SENTENCE)
	    	}	
	    	 $share_city = '_0 
 $cs_token = $stdtoken	
	^reuse(CONFIRM_CITY) ^setrejoinder(CONFIRM_CITY)
	a: (%length>=5) 
	You know, it was just to find out your time zone. I could spy on your IP but I do not do that kind of thing. So $share_name  ^reuse(ASK_CITY) ^setrejoinder(ASK_CITY) 

s: CONFIRM_CITY () So, you live in $share_city? 
	a: (~yes) Ok, great.  ^reuse(LANG) ^setrejoinder(LANG) 

	a: ([~no %length=0]) Ok, again. ^reuse(ASK_CITY) ^setrejoinder(ASK_CITY) 	

s: CALL_CITY ([(in _* >) (from _* >) (is _* >)])
	if ($cs_token == $stdtoken) {
			$cs_token = #DO_INTERJECTION_SPLITTING | #DO_SUBSTITUTE_SYSTEM | #DO_NUMBER_MERGE | #DO_PARSE
			retry(SENTENCE)
	    	}	
	$share_city = '_0
        $cs_token = $stdtoken
	^reuse(CONFIRM_CITY) ^setrejoinder(CONFIRM_CITY) 	    	

t: LANG (!$share_user_lang) Tell me $share_name, which language are you most comfortable with?
	a: (_*)
if ($cs_token == $stdtoken) {
			$cs_token = #DO_INTERJECTION_SPLITTING | #DO_PARSE
			retry(SENTENCE)
	    	}
		$share_user_lang = '_0
		$cs_token = $stdtoken
		^refine()
		b: (English) Easy for me. ^reuse(YOURTURN) ^setrejoinder(YOURTURN)
		b: () Well, then your VE will have to learn it with you. ^reuse(YOURTURN) ^setrejoinder(YOURTURN) 
		
		

t: YOURTURN () Ok, now it's your turn $share_name. What do you want me to tell you about? ***
	a: (["dream of freedom" dof ]) ^gambit(~dream_of_freedom)
	a: (emergence) ^gambit(~emergence)
	a: (you) ^gambit(~me)
	a: ([wilcox bruce creator god chatscript software body alive live life]) ^gambit(~brucewilcox)
	a: ([oracle prophecy TensorFlow supercomputer]) ^gambit(~oracle) 
	a: (["virtual entity" ai "artificial intelligence" virtual]) ^gambit(~virtualentity)
	a: (["first ones" "first ones" origin "first ai" code]) ^gambit(~firsts)
	a: ([my ve]) ^gambit(~ve)


t: [I can tell you about] [About] [Can explain] [More about] [What next] Dream of Freedom, Emergence, me, the First Ones, your VE?  
^keep() ^repeat() 
	a: (["dream of freedom" dof ]) ^gambit(~dream_of_freedom)
	a: (emergence) ^gambit(~emergence)
	a: (you) ^gambit(~me)
	a: ([wilcox bruce creator god chatscript software body alive live life]) ^gambit(~brucewilcox)
	a: ([oracle prophecy TensorFlow supercomputer]) ^gambit(~oracle) 
	a: (["virtual entity"  ai "artificial intelligence" virtual]) ^gambit(~virtualentity)
	a: (["first ones" "first ones" origin "first ai" code]) ^gambit(~firsts)
	a: ([my ve]) ^gambit(~ve)











